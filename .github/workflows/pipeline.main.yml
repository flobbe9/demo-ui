name: word-light_frontend main

run-name: ${{ github.event.head_commit.message }}
on: 
  push: 
    branches: 
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository 
        uses: actions/checkout@v4

      - run: npm ci
      
      - run: npm run build
        env: 
          CI: ""

  push_to_DockerHub:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v5.1.0
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/word_light_frontend:latest
          build-args: |
            SSL_PASSWORD=${{ secrets.SSL_PASSWORD }}
            SSL_CRT_FILE=word_light.crt.pem
            SSL_KEY_FILE=word_light.key.pem
            SSL_KEYSTORE_FILE=word_light.p12

  deploy_to_server:
    runs-on: ubuntu-latest
    needs: push_to_DockerHub

    # TODO: is data deleted when updating db image?
    steps:
      - uses: appleboy/ssh-action@v1.0.3
        with: 
          host: word-light.de
          username: ${{ secrets.SSH_USER_NAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          debug: true
          script_stop: true
          # pull new images, remove left overs from old images, kill processes on ports that I want to use, start microservice
          script: |
            docker-compose pull
            yes | docker rm $(docker container ls --all --filter=ancestor=$(docker images -f "dangling=true" -q) --format "{{.ID}}") --force
            yes | docker image rm $(docker images -f "dangling=true" -q)
            pkill mysql
            pkill httpd
            docker-compose up